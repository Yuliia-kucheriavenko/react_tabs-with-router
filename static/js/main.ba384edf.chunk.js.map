{"version":3,"sources":["pages/HomePage.tsx","componets/PageNavLink.tsx","componets/MainNavigation.tsx","componets/TabsTable.tsx","pages/TabsPage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","PageNavLink","to","text","isActive","cn","MainNavigation","TabsTable","tabs","selectedTabId","selectedTab","find","tab","id","map","title","content","TabsPage","useParams","tabId","App","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"gOAAaA,EAAW,WACtB,OACE,oBAAIC,UAAU,QAAd,wB,uBCOSC,EAA+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAC1C,cAAC,IAAD,CACED,GAAIA,EACJF,UAAW,gBAAGI,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cAAe,CAAE,YAAaD,KAHlC,SAMGD,KCbQG,EAA2B,kBACtC,qBACEN,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaE,GAAG,IAAIC,KAAK,SACzB,cAAC,EAAD,CAAaD,GAAG,QAAQC,KAAK,iBCAxBI,EAA6B,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,cAC3CC,EAAcF,EAAKG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,KAEhD,OACE,mCACE,sBAAKT,UAAU,gBAAf,UACE,6BACGQ,EAAKM,KAAI,SAAAF,GAAG,OACX,oBAEE,UAAQ,MACRZ,UAAWK,IAAG,CACZ,aAAwB,OAAXK,QAAW,IAAXA,OAAA,EAAAA,EAAaG,MAAOD,EAAIC,KAJzC,SAOE,cAAC,IAAD,CAAMX,GAAE,gBAAWU,EAAIC,IAAvB,SAA8BD,EAAIG,SAN7BH,EAAIC,SAWf,qBAAKb,UAAU,QAAQ,UAAQ,aAA/B,SACGU,EACGA,EAAYM,QACZ,8BCxBDC,EAA4B,SAAC,GAAc,IAAZT,EAAW,EAAXA,KAC1C,EAAuBU,cAAfC,aAAR,MAAgB,GAAhB,EAEA,OACE,qCACE,oBAAInB,UAAU,QAAd,uBACA,cAAC,EAAD,CACEQ,KAAMA,EACNC,cAAeU,QCTjBX,EAAc,CAClB,CAAEK,GAAI,QAASE,MAAO,QAASC,QAAS,eACxC,CAAEH,GAAI,QAASE,MAAO,QAASC,QAAS,eACxC,CAAEH,GAAI,QAASE,MAAO,QAASC,QAAS,gBAG7BI,EAAM,kBACjB,qCAEE,cAAC,EAAD,IAEA,qBAAKpB,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqB,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUpB,GAAG,QACzC,eAAC,IAAD,CAAOmB,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,CAAUd,KAAMA,MACtC,cAAC,IAAD,CAAOa,KAAK,SAASC,QAAS,cAAC,EAAD,CAAUd,KAAMA,SAEhD,cAAC,IAAD,CAAOa,KAAK,IAAIC,QAAS,oBAAItB,UAAU,QAAd,yCCzBnCwB,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ba384edf.chunk.js","sourcesContent":["export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home page</h1>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => cn(\n      'navbar-item', { 'is-active': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import React from 'react';\nimport { PageNavLink } from './PageNavLink';\n\nexport const MainNavigation: React.FC = () => (\n  <nav\n    className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n    data-cy=\"Nav\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"/tabs\" text=\"Tabs\" />\n      </div>\n    </div>\n  </nav>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport { Tab } from '../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n};\n\nexport const TabsTable: React.FC<Props> = ({ tabs, selectedTabId }) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId);\n\n  return (\n    <>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              data-cy=\"Tab\"\n              className={cn({\n                'is-active': selectedTab?.id === tab.id,\n              })}\n            >\n              <Link to={`/tabs/${tab.id}`}>{tab.title}</Link>\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {selectedTab\n            ? selectedTab.content\n            : 'Please select a tab'}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Tab } from '../types/Tab';\nimport { TabsTable } from '../componets/TabsTable';\n\ntype Props = {\n  tabs: Tab[];\n};\n\nexport const TabsPage: React.FC<Props> = ({ tabs }) => {\n  const { tabId = '' } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n      <TabsTable\n        tabs={tabs}\n        selectedTabId={tabId}\n      />\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { HomePage } from './pages/HomePage';\nimport { Tab } from './types/Tab';\nimport { MainNavigation } from './componets/MainNavigation';\nimport { TabsPage } from './pages/TabsPage';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => (\n  <>\n    {/* Also requires <html class=\"has-navbar-fixed-top\"> */}\n    <MainNavigation />\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" />} />\n          <Route path=\"tabs\">\n            <Route index element={<TabsPage tabs={tabs} />} />\n            <Route path=\":tabId\" element={<TabsPage tabs={tabs} />} />\n          </Route>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Routes>\n      </div>\n    </div>\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}